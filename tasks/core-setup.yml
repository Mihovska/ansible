---
- name: Install System Packages 1 (build-essential, cmake, pkg-config, pthread)
  become: true
  apt:
    name: [build-essential, cmake, pkg-config, libpthread-stubs0-dev]
  tags: [install, neovim, core]
- name: Install System Packages 2 (lua, unzip, libtool, libtool-bin, gettext)
  become: true
  apt:
    name: [lua5.1, unzip, libtool, libtool-bin, gettext]
  tags: [install, neovim, core]
- name: Install System Packages 3 (the rest)
  become: true
  apt:
    name:
      - curl
      - htop
      - lsof
      - ccache
      - python3-pip
      - dconf-editor
      - moreutils
      - awscli
      - libstdc++-10-dev
      - g++-10-multilib
      - gcc-10-multilib
      - fonts-powerline
  tags: [install, core]

# Install Nerd font
- name: Install Jetbrains Nerd Font
  block:
    - name: Create Directory
      ansible.builtin.file:
        path: /home/{{ lookup('env', 'USER') }}/.fonts/JetBrainsMonoNerd
        state: directory
        mode: '0755'
        owner: "{{ lookup('env', 'USER') }}"
    - name: Download
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/JetBrainsMono.zip
        dest: /home/{{ lookup('env', 'USER') }}/.fonts/JetBrainsMonoNerd
        remote_src: true
        owner: "{{ lookup('env', 'USER') }}"
    - name: Font cache update
      action: command fc-cache -fv
  tags: [install, core]

# Installs [HomeBrew](https://brew.sh/) prompt
- name: Check if HomeBrew is installed
  ansible.builtin.stat:
    path: /home/linuxbrew/.linuxbrew/bin/brew
  register: brew
  tags: [install, core]
- name: Download & Install HomeBrew
  when: not brew.stat.exists
  block:
    - name: Download Installer Script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
        dest: /tmp/brew_install.sh
        mode: '775'
    - name: Run Installer Script
      ansible.builtin.shell: NONINTERACTIVE=1 /tmp/brew_install.sh
  tags: [install, core]
- name: Set LinuxBrew Executable Path
  ansible.builtin.set_fact:
    linuxbrew_executable: /home/linuxbrew/.linuxbrew/bin/brew
    linuxbrew_path: /home/linuxbrew/.linuxbrew/bin
  tags: [install, core]
- name: Check if Starship is installed
  ansible.builtin.stat:
    path: /home/{{ lookup('env', 'USER') }}/.config/starship.toml
  register: starship
  tags: [install, core]
- name: Install
  when: not starship.stat.exists
  ansible.builtin.command: '{{ linuxbrew_executable }} install starship'
  environment:
    HOME: /home/{{ lookup('env', 'USER') }}
  args:
    executable: /bin/bash
  tags: [install, core]
- name: Installing SDK Man
  become: false
  shell: curl -s 'https://get.sdkman.io' | bash
  args:
    executable: /bin/bash
  tags: [install, core]
- name: Adding SDK Man to bash_profile
  environment:
    HOME: /home/{{ lookup('env', 'USER') }}
  lineinfile: path=$HOME/.bash_profile line={{ item }} state=present create=yes
  with_items: [source "$HOME/.sdkman/bin/sdkman-init.sh"]
  tags: [install, core]
- name: Installing Java
  shell: source ~/.bash_profile && sdk install java 21.0.3-amzn
  become: false
  args:
    executable: /bin/bash
  tags: [install, core]
- name: Get Lazygit version
  uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
    return_content: true
  register: lazygit_release
  tags: [install, core]
- name: Extract Lazygit version
  set_fact:
    lazygit_version: "{{ lazygit_release.content | from_json | json_query('tag_name') | regex_replace('^v', '') }}"
  tags: [install, core]
- name: Download Lazygit
  get_url:
    url: https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz
    dest: /tmp/lazygit.tar.gz
  tags: [install, core]
- name: Extract Lazygit
  unarchive:
    src: /tmp/lazygit.tar.gz
    dest: /tmp
    remote_src: true
    creates: /tmp/lazygit
  tags: [install, core]
- name: Install Lazygit
  become: true
  copy:
    src: /tmp/lazygit
    dest: /usr/local/bin/lazygit
    mode: '0755'
  tags: [install, core]
- name: Get Lazydocker version
  uri:
    url: https://api.github.com/repos/jesseduffield/lazydocker/releases/latest
    return_content: true
  register: lazydocker_release
  tags: [install, core]
- name: Extract Lazydocker version
  set_fact:
    lazydocker_version: "{{ lazydocker_release.content | from_json | json_query('tag_name') | regex_replace('^v', '') }}"
  tags: [install, core]
- name: Download Lazydocker
  get_url:
    url: https://github.com/jesseduffield/lazydocker/releases/latest/download/lazydocker_{{ lazydocker_version }}_Linux_x86_64.tar.gz
    dest: /tmp/lazydocker.tar.gz
  tags: [install, core]
- name: Extract Lazydocker version
  unarchive:
    src: /tmp/lazydocker.tar.gz
    dest: /tmp
    remote_src: true
    creates: /tmp/lazydocker
  tags: [install, core]
- name: Install Lazydocker
  become: true
  copy:
    src: /tmp/lazygit
    dest: /usr/local/bin/lazygit
    mode: '0755'
  tags: [install, core]
